generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  sessions      Session[]
  admin      Boolean  @default(false)
  level   Int   @default(0)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Event {
  id         String    @id @default(cuid())
  name       String
  description  String
  createdBy  String
  startDate  Int
  endDate  Int
  visible   Boolean   @default(true)
  isPublic  Boolean   @default(false)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model Assets {
  id  String @id  @default(cuid())
  eventID   String
  name  String
  description String
  imagePath  String
  createdBy  String
  visible   Boolean @default(true)
  latitude  String
  longitude String
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model Questions {
  id  String @id @default(cuid())
  eventID String
  question String
  options String 
  answer  Int 
  points  Int 
  createdBy String
  visible   Boolean @default(true)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model EventsJoined {
  id          String    @id @default(cuid())
  userEmail      String
  eventID     String
  level       Int
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}